938. Range Sum of BST
Link : https://leetcode.com/problems/range-sum-of-bst/description/
Given the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].

1st way
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
       
        if(root == NULL){
            return 0;
        }
        int sum=rangeSumBST(root->left,low,high)+ rangeSumBST(root->right,low,high);
        if(root->val >= low && root->val <=high){
            sum += root->val;
        }
       
        return sum;
    }
};

2nd way
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        if(root == NULL){
             return 0;
        }
        if(root->val >= low && root->val <=high){
            return root->val + rangeSumBST(root->left,low,high) 
            + rangeSumBST(root->right,low,high);
        }
        if(root->val < low){
            return rangeSumBST(root->right,low,high);
        }
        return rangeSumBST(root->left,low,high);
    }
};
