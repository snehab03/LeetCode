Given the root of a binary tree, return all root-to-leaf paths in any order.
A leaf is a node with no children.
Example 1:

Input: root = [1,2,3,null,5]
Output: ["1->2->5","1->3"]
link : https://leetcode.com/problems/binary-tree-paths/description/

class Solution {
public:
    void dfs(TreeNode* root,vector<string>& ans,string path){
        if(!root) return;
        path += to_string(root->val);
        if(!root->left && !root->right){
            ans.push_back(path);
        }else{
            dfs(root->left,ans,path+"->");
            dfs(root->right,ans,path+"->");
        }
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        dfs(root,ans,"");
        return ans;
    }
};
